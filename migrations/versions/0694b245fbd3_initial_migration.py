"""Initial migration

Revision ID: 0694b245fbd3
Revises: 
Create Date: 2025-08-26 11:59:02.554914

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0694b245fbd3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('config_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_hash', sa.String(length=64), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('parent_version_id', sa.Integer(), nullable=True),
    sa.Column('change_type', sa.String(length=20), nullable=False),
    sa.Column('change_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('data_points_synced', sa.Boolean(), nullable=False),
    sa.Column('is_locked', sa.Boolean(), server_default=sa.text('0'), nullable=False),
    sa.ForeignKeyConstraint(['parent_version_id'], ['config_files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('directory_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('directory_path', sa.String(length=255), nullable=False),
    sa.Column('file_filter', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('global_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('config', sa.Text(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('output_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('is_locked', sa.Boolean(), nullable=False),
    sa.Column('config', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('point_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('processing_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('plugin_type', sa.String(length=50), nullable=False),
    sa.Column('config', sa.Text(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=80), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('config_snippets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_file_id', sa.Integer(), nullable=False),
    sa.Column('snippet_type', sa.String(length=50), nullable=False),
    sa.Column('plugin_name', sa.String(length=100), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_locked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['config_file_id'], ['config_files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('global_parameter_config_file',
    sa.Column('global_parameter_id', sa.Integer(), nullable=False),
    sa.Column('config_file_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['config_file_id'], ['config_files.id'], ),
    sa.ForeignKeyConstraint(['global_parameter_id'], ['global_parameters.id'], ),
    sa.PrimaryKeyConstraint('global_parameter_id', 'config_file_id')
    )
    op.create_table('output_source_config_file',
    sa.Column('output_source_id', sa.Integer(), nullable=False),
    sa.Column('config_file_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['config_file_id'], ['config_files.id'], ),
    sa.ForeignKeyConstraint(['output_source_id'], ['output_source.id'], ),
    sa.PrimaryKeyConstraint('output_source_id', 'config_file_id')
    )
    op.create_table('point_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('measurement', sa.String(length=80), nullable=False),
    sa.Column('original_point_name', sa.String(length=200), nullable=True),
    sa.Column('normalized_point_name', sa.String(length=200), nullable=True),
    sa.Column('point_comment', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), server_default='{}', nullable=False),
    sa.Column('fields', sa.Text(), server_default='{}', nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('data_type', sa.String(length=20), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=False),
    sa.Column('config_file_id', sa.Integer(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('is_locked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('import_batch', sa.String(length=50), nullable=True),
    sa.Column('import_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['config_file_id'], ['config_files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('telegraf_processes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('pid', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('config_file_id', sa.Integer(), nullable=True),
    sa.Column('log_file_path', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('stop_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['config_file_id'], ['config_files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('point_info_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('point_info_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('measurement', sa.String(length=80), nullable=False),
    sa.Column('original_point_name', sa.String(length=200), nullable=True),
    sa.Column('normalized_point_name', sa.String(length=200), nullable=True),
    sa.Column('point_comment', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('fields', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('data_type', sa.String(length=20), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('config_file_id', sa.Integer(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('import_batch', sa.String(length=50), nullable=True),
    sa.Column('import_status', sa.String(length=20), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=False),
    sa.Column('change_reason', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['point_info_id'], ['point_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('point_info_history')
    op.drop_table('telegraf_processes')
    op.drop_table('point_info')
    op.drop_table('output_source_config_file')
    op.drop_table('global_parameter_config_file')
    op.drop_table('config_snippets')
    op.drop_table('audit_log')
    op.drop_table('users')
    op.drop_table('processing_tags')
    op.drop_table('point_templates')
    op.drop_table('output_source')
    op.drop_table('global_parameters')
    op.drop_table('directory_settings')
    op.drop_table('config_files')
    # ### end Alembic commands ###
